name: CI
on:
  push:
    branches:
    - master
    paths:
    - src/**
    - pom.xml
    - .github/workflows/ci.yml
  pull_request:
    branches:
    - master
    paths:
    - src/**
    - pom.xml
    - .github/workflows/ci.yml
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '11.x'
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
#    - name: mvn test
#      run: |
#        set -e
#        ./mvnw -V test
    - name: mvn package
      if: github.ref == 'refs/heads/master'
      run: |
        set -e
        ./mvnw -V package -DskipTests
    - name: pack build
      if: github.ref == 'refs/heads/master'
      env:
        PACK_VERSION: 0.17.0
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      run: |
        set -e
        docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
        VERSION=$(grep '<version>' pom.xml | head -n 1 | tail -n 1 | sed -e 's|<version>||g' -e 's|</version>||g' -e 's| ||g')
        IMAGE_NAME=${DOCKER_REGISTRY}:${VERSION}
        wget -q https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz
        tar xzf pack-*.tgz
        rm -f pack-*.tgz
        set +e
        docker pull ${IMAGE_NAME}
        set -e
        ./pack build ${IMAGE_NAME} \
          -p target/moneygr2-*.jar  \
          --builder gcr.io/paketo-buildpacks/builder:base
        docker push ${IMAGE_NAME}
        docker pull ${IMAGE_NAME}
        cat <<EOF > values.yml
        #@data/values
        #@overlay/match-child-defaults missing_ok=True
        ---
        git_repo: https://github.com/maki-home/moneygr2
        git_commit: $(git rev-parse HEAD)
        image_digest: $(docker inspect --format='{{index .RepoDigests 0}}' ${IMAGE_NAME} | awk -F '@' '{print $2}')
        EOF
        cat values.yml
    - name: update config
      if: github.ref == 'refs/heads/master'
      env:
        REPOSITORY: making/config
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        GIT_NAME: ${{ secrets.GIT_NAME }}
        GIT_SSH_KEY: ${{ secrets.GIT_SSH_KEY }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE: master
        APP_NAME: moneygr
      run: |
        set -ex
        GIT_REV=$(git rev-parse HEAD)
        mkdir -p ~/.ssh
        cat > ~/.ssh/config <<EOF
        StrictHostKeyChecking no
        LogLevel quiet
        EOF
        cat > ~/.ssh/id_rsa <<EOF
        ${GIT_SSH_KEY}
        EOF
        chmod 0600 ~/.ssh/*

        git config --global user.email "${GIT_EMAIL}"
        git config --global user.name "${GIT_NAME}"
        git clone git@github.com:${REPOSITORY}.git
        cd $(echo ${REPOSITORY} | awk -F '/' '{print $2}')

        # send a pull request
        BRANCH_NAME="update-${APP_NAME}-${GIT_REV}"
        COMMIT_MESSAGE="Bump to maki-home/moneygr2@${GIT_REV}"
        git checkout -b ${BRANCH_NAME}
        cp ../values.yml home-lab/grape/app/${APP_NAME}/values.yml
        git diff
        git add -A
        git commit -m "${COMMIT_MESSAGE}"
        git push origin ${BRANCH_NAME}
        curl -u ${GIT_NAME}:${ACCESS_TOKEN} -H "Content-Type: application/json" -X POST -d "{\"title\":\"${COMMIT_MESSAGE}\",\"body\":\"See https://github.com/maki-home/moneygr2/commit/${GIT_REV}\nCorresponding commit to dev env is ${DEV_REV}\",\"head\":\"${BRANCH_NAME}\",\"base\":\"${BASE}\"}" https://api.github.com/repos/${REPOSITORY}/pulls
